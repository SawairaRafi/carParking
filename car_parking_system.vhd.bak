library ieee;
Use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

entity car_parking_system is
port(
	clk: in std_logic;
	rst:in std_logic;
	user_type: in std_logic_vector(1 downto 0);
	vehicle_type: in std_logic_vector(2 downto 0);
	level: in std_logic_vector(2 downto 0);

	password:std_logic_vector(2 downto 0);
	user_name: std_logic_vector(2 downto 0 );

	
	Money_Deposited:out std_logic_vector(7 downto 0);
	Change: out std_logic_vector(7 downto 0);
	Dispensed_item:out std_logic_vector(2 downto 0)
	
	

);

end vending_machine;


architecture behv of vending_machine is
type state_type is(idle,vehicleType);

signal state: state_type:=initialize;
signal Money_count:std_logic_vector(7 downto 0);
signal Change1:std_logic_vector(7 downto 0);
signal Product_available: std_logic:='1';
Signal return_money: std_logic_vector(7 downto 0);

signal product_return:std_logic_vector(2 downto 0);
begin
Process(clk,rst)
begin	
				if(rising_edge(clk)) then
				
				if (rst='1') then  
							money_count<="00000000";
							change1<="00000000";
							product_return<="000";
							
				 else 
					 
case state is
				 when initialize =>
							money_count<="00000000";
							change1<="00000000";
							product_return<="000";
			
							    if(sel_1='1' and sel_2='0' and sel_3='0') then
									 if (Product_available='1') then
									 state<=waiting1;
									 else
									 state<=initialize;
									end if;
									
									
								elsif(sel_1='0' and sel_2='1' and sel_3='0') then
									 if (Product_available='1') then
									 state<=waiting2;
									 else
									 state<=initialize;
									 end if;
								
								elsif(sel_1='0' and sel_2='0' and sel_3='1') then
									 if (Product_available='1') then
									 state<=waiting3;
									 else
									 state<=initialize;
									 end if;
									
									
									end if;
					
							
							when waiting1 => --fanta
							    if(rs_1='1' and rs_2='0' and rs_4='0' and rs_8='0' and Money_count < "00000011" ) then
								 state <=state1;
								 
								 elsif(rs_1='0' and rs_2='1' and rs_4='0' and rs_8='0' and Money_count < "00000011" ) then			
--								 Product_return<='0';
								 state<=state2;
								 
								 elsif(rs_1='0' and rs_2='0' and rs_4='1' and rs_8='0' and Money_count < "00000011" ) then
								 state<=state3;
								 
								 elsif(rs_1='0' and rs_2='0' and rs_4='0' and rs_8='1' and Money_count < "00000011" ) then
								 state<=state4;
								 
								 elsif(Money_count>="00000011") then
								 state<=fanta;
								 
								 end if;
								 
						when waiting2 => --cola
							    if(rs_1='1' and rs_2='0' and rs_4='0' and rs_8='0' and Money_count < "00000100" ) then
								 state <=state1;
								 
								 elsif(rs_1='0' and rs_2='1' and rs_4='0' and rs_8='0' and Money_count < "00000100" ) then			
--								 Product_return<='0';
								 state<=state2;
								 
								 elsif(rs_1='0' and rs_2='0' and rs_4='1' and rs_8='0' and Money_count < "00000100" ) then
								 state<=state3;
								 
								 elsif(rs_1='0' and rs_2='0' and rs_4='0' and rs_8='1' and Money_count < "00000100" ) then
								 state<=state4;
								 
								 elsif(Money_count>="00000100") then
								 state<=cola;
								 
								 end if;
								 
						when waiting3 => --sprite
							    if(rs_1='1' and rs_2='0' and rs_4='0' and rs_8='0' and Money_count < "00000101" ) then
								 state <=state1;
								 
								 elsif(rs_1='0' and rs_2='1' and rs_4='0' and rs_8='0' and Money_count < "00000101" ) then			
--								 Product_return<='0';
								 state<=state2;
								 
								 elsif(rs_1='0' and rs_2='0' and rs_4='1' and rs_8='0' and Money_count < "00000101" ) then
								 state<=state3;
								 
								 elsif(rs_1='0' and rs_2='0' and rs_4='0' and rs_8='1' and Money_count < "00000101" ) then
								 state<=state4;
								 
								 elsif(Money_count>="00000101") then
								 state<=sprite;
								 
								 end if;
								 
							when state1 =>  --rs 1
								Money_count<=money_count+"00000001";
								if(sel_1='1' and sel_2='0' and sel_3='0') then
									state <=waiting1;
								elsif(sel_1='0' and sel_2='1' and sel_3='0') then
									state <=waiting2;
								elsif(sel_1='0' and sel_2='0' and sel_3='1') then
									state <=waiting3;
								end if;
							
							when state2 => --rs 2
							Money_count<=money_count+"00000010";
								if(sel_1='1' and sel_2='0' and sel_3='0') then
									state <=waiting1;
								elsif(sel_1='0' and sel_2='1' and sel_3='0') then
									state <=waiting2;
								elsif(sel_1='0' and sel_2='0' and sel_3='1') then
									state <=waiting3;
								end if;
									
							when state3 => --rs 4
							Money_count<=money_count+"00000100";
								if(sel_1='1' and sel_2='0' and sel_3='0') then
									state <=waiting1;
								elsif(sel_1='0' and sel_2='1' and sel_3='0') then
									state <=waiting2;
								elsif(sel_1='0' and sel_2='0' and sel_3='1') then
									state <=waiting3;
								end if;
									
							when state4 => --rs 8
							Money_count<=money_count+"00001000";
								if(sel_1='1' and sel_2='0' and sel_3='0') then
									state <=waiting1;
								elsif(sel_1='0' and sel_2='1' and sel_3='0') then
									state <=waiting2;
								elsif(sel_1='0' and sel_2='0' and sel_3='1') then
									state <=waiting3;
								end if;
							
							when fanta =>
							if(Money_count >= "00000011") then
								Product_return<="001";
								Change1<=money_count-"00000011";
								state<=initialize;
							end if;
							
							when cola =>
							if(Money_count >= "00000100") then
								Product_return<="010";
								Change1<=money_count-"00000100";
								state<=initialize;
							end if;
							
							when sprite =>
							if(Money_count >= "00000101") then
								Product_return<="100";
								Change1<=money_count-"00000101";
								state<=initialize;
							end if;
						
							
end case;
end if;
end if;



end process;
			Dispensed_item<=product_return;
			change<=change1;
			Money_Deposited<=Money_count;
			



end behv;

